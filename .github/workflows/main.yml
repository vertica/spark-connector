# Workflow for running Unit tests and Integration tests
name: Tests-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the project
        uses: actions/checkout@v2
      - name: Build the project
        run: cd connector && sbt package
      - name: Upload the build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-jar-file
          path: /home/runner/work/spark-connector/spark-connector/connector/target/scala-2.12/spark-vertica-connector_2.12-*.jar


#  run-analysis:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout the project
#        uses: actions/checkout@v2
#      - name: Run scalastyle
#        run: cd connector && sbt scalastyle
#  run-unit-tests:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout the project
#        uses: actions/checkout@v2
#      - name: Run unit tests
#        run: cd connector && sbt coverage test coverageReport
#      - name: Upload coverage report to codecov
#        uses: codecov/codecov-action@v2
#        with:
#          flags: unittests
#          name: codecov-umbrella
#          fail_ci_if_error: true
#          verbose: true
#  run-integration-tests-spark-3-0-latest:
#    runs-on: ubuntu-latest
#    needs: build
#    env:
#      VERTICA_VERSION: 11.1.1-0
#    steps:
#      - name: Checkout the project
#        uses: actions/checkout@v2
#      - name: Run docker compose
#        run: cd docker && docker-compose up -d
#      - name: Create db in Vertica
#        run: docker exec docker_vertica_1 /bin/sh -c "opt/vertica/bin/admintools -t create_db --database=docker --password='' --hosts=localhost"
#      - name: Replace HDFS core-site config with our own
#        run: docker exec docker_hdfs_1 cp /hadoop/conf/core-site.xml /opt/hadoop/etc/hadoop/core-site.xml
#      - name: Replace HDFS hdfs-site config with our own
#        run: docker exec docker_hdfs_1 cp /hadoop/conf/hdfs-site.xml /opt/hadoop/etc/hadoop/hdfs-site.xml
#      - name: Copy partitioned parquet data to HDFS container
#        run: docker cp ./functional-tests/src/main/resources/3.1.1 docker_hdfs_1:/partitioned
#      - name: Copy partitioned parquet data to hadoop from local
#        uses: nick-invision/retry@v2
#        with:
#          timeout_seconds: 20
#          max_attempts: 10
#          retry_on: error
#          command: docker exec docker_hdfs_1 hadoop fs -copyFromLocal /partitioned /3.1.1
#      - name: Download the build artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: build-jar-file
#          path: ./functional-tests/lib/
#      - name: Increase active sessions in database
#        uses: nick-invision/retry@v2
#        with:
#          timeout_seconds: 20
#          max_attempts: 10
#          retry_on: error
#          command: docker exec docker_vertica_1 vsql -c "ALTER DATABASE docker SET MaxClientSessions=100;"
#      - name: Copy functional tests to home directory of client container
#        run: docker exec docker_client_1 cp -r /spark-connector/functional-tests /home
#      - name: Copy version.properties file from client container
#        run: docker exec docker_client_1 cp -r /spark-connector/version.properties /home
#      - name: Run the integration tests on Spark 3.0
#        run: docker exec -w /home/functional-tests docker_client_1 sbt run -DsparkVersion="[3.0.0, 3.1.0)" -DhadoopVersion="[2.7.0, 2.8.0)"
#      - name: Remove docker containers
#        run: cd docker && docker-compose down
#  run-integration-tests-spark-3-1-latest:
#    runs-on: ubuntu-latest
#    needs: build
#    env:
#      VERTICA_VERSION: 11.1.1-0
#    steps:
#      - name: Checkout the project
#        uses: actions/checkout@v2
#      - name: Build client image
#        run: docker build -t client ./docker
#      - name: Run docker compose
#        run: cd docker && docker-compose up -d
#      - name: Create db in Vertica
#        run: docker exec docker_vertica_1 /bin/sh -c "opt/vertica/bin/admintools -t create_db --database=docker --password='' --hosts=localhost"
#      - name: Replace HDFS core-site config with our own
#        run: docker exec docker_hdfs_1 cp /hadoop/conf/core-site.xml /opt/hadoop/etc/hadoop/core-site.xml
#      - name: Replace HDFS hdfs-site config with our own
#        run: docker exec docker_hdfs_1 cp /hadoop/conf/hdfs-site.xml /opt/hadoop/etc/hadoop/hdfs-site.xml
#      - name: Copy partitioned parquet data to HDFS container
#        run: docker cp ./functional-tests/src/main/resources/3.1.1 docker_hdfs_1:/partitioned
#      - name: Copy partitioned parquet data to hadoop from local
#        uses: nick-invision/retry@v2
#        with:
#          timeout_seconds: 20
#          max_attempts: 10
#          retry_on: error
#          command: docker exec docker_hdfs_1 hadoop fs -copyFromLocal /partitioned /3.1.1
#      - name: Download the build artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: build-jar-file
#          path: ./functional-tests/lib/
#      - name: Increase active sessions in database
#        uses: nick-invision/retry@v2
#        with:
#          timeout_seconds: 20
#          max_attempts: 10
#          retry_on: error
#          command: docker exec docker_vertica_1 vsql -c "ALTER DATABASE docker SET MaxClientSessions=100;"
#      - name: Copy functional tests to home directory of client container
#        run: docker exec docker_client_1 cp -r /spark-connector/functional-tests /home
#      - name: Copy version.properties file from client container
#        run: docker exec docker_client_1 cp -r /spark-connector/version.properties /home
#      - name: Run the integration tests on Spark 3.1
#        run: docker exec -w /home/functional-tests docker_client_1 sbt run -DsparkVersion="[3.1.0, 3.2.0)" -DhadoopVersion="[3.2.0, 3.3.0)"
#      - name: Remove docker containers
#        run: cd docker && docker-compose down
#  run-integration-tests-spark-3-2-latest:
#    runs-on: ubuntu-latest
#    needs: build
#    env:
#      VERTICA_VERSION: 11.1.1-0
#    steps:
#      - name: Checkout the project
#        uses: actions/checkout@v2
#      - name: Build client image
#        run: docker build -t client ./docker
#      - name: Run docker compose
#        run: cd docker && docker-compose up -d
#      - name: Create db in Vertica
#        run: docker exec docker_vertica_1 /bin/sh -c "opt/vertica/bin/admintools -t create_db --database=docker --password='' --hosts=localhost"
#      - name: Replace HDFS core-site config with our own
#        run: docker exec docker_hdfs_1 cp /hadoop/conf/core-site.xml /opt/hadoop/etc/hadoop/core-site.xml
#      - name: Replace HDFS hdfs-site config with our own
#        run: docker exec docker_hdfs_1 cp /hadoop/conf/hdfs-site.xml /opt/hadoop/etc/hadoop/hdfs-site.xml
#      - name: Copy partitioned parquet data to HDFS container
#        run: docker cp ./functional-tests/src/main/resources/3.1.1 docker_hdfs_1:/partitioned
#      - name: Copy partitioned parquet data to hadoop from local
#        uses: nick-invision/retry@v2
#        with:
#          timeout_seconds: 20
#          max_attempts: 10
#          retry_on: error
#          command: docker exec docker_hdfs_1 hadoop fs -copyFromLocal /partitioned /3.1.1
#      - name: Download the build artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: build-jar-file
#          path: ./functional-tests/lib/
#      - name: Increase active sessions in database
#        uses: nick-invision/retry@v2
#        with:
#          timeout_seconds: 20
#          max_attempts: 10
#          retry_on: error
#          command: docker exec docker_vertica_1 vsql -c "ALTER DATABASE docker SET MaxClientSessions=100;"
#      - name: Copy functional tests to home directory of client container
#        run: docker exec docker_client_1 cp -r /spark-connector/functional-tests /home
#      - name: Copy version.properties file from client container
#        run: docker exec docker_client_1 cp -r /spark-connector/version.properties /home
#      - name: Run the integration tests on Spark 3.2
#        run: docker exec -w /home/functional-tests docker_client_1 sbt run -DsparkVersion="[3.2.0, 3.3.0)" -DhadoopVersion="3.3.1"
#      - name: Remove docker containers
#        run: cd docker && docker-compose down
  run-integration-tests_gcs:
    runs-on: ubuntu-latest
    needs: build
    env:
      VERTICA_VERSION: 11.0.2-0
      GCS_FILEPATH: ${{secrets.GCS_FILEPATH}}
      GCS_VERTICA_KEY_ID: ${{secrets.GCS_VERTICA_KEY_ID}}
      GCS_VERTICA_KEY_SECRET: ${{secrets.GCS_VERTICA_KEY_SECRET}}
      GCS_SERVICE_KEY_ID: ${{secrets.GCS_SERVICE_KEY_ID}}
      GCS_SERVICE_KEY: ${{secrets.GCS_SERVICE_KEY}}
      GCS_SERVICE_EMAIL: ${{secrets.GCS_SERVICE_EMAIL}}
    steps:
      - name: Checkout the project
        uses: actions/checkout@v2
      - name: Download the build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-jar-file
          path: ./functional-tests/lib/
      - name: Add config options to application.conf
        run: cd functional-tests/src/main/resources && echo -e 'functional-tests={ \n\thost="'"vertica"'" \n\tport="'"5433"'" \n\tdb="'"docker"'" \n\tuser="'"dbadmin"'" \n\tpassword="'""'" \n\tlog='true' \n\tfilepath="'"$GCS_FILEPATH"'" \n\ttlsmode="'"disable"'" \n\ttruststorepath="'"/truststore.jks"'" \n\ttruststorepassword="'"dbadmin"'" \n}\n' > application.conf
      - name: Build the functional-tests project
        run: cd functional-tests && sbt assembly
      - name: Build client image
        run: docker build -t client ./docker
      - name: Run docker compose
        run: cd docker && docker-compose up -d
      - name: Create db in Vertica
        run: docker exec docker_vertica_1 /bin/sh -c "opt/vertica/bin/admintools -t create_db --database=docker --password='' --hosts=localhost"
      - name: Replace HDFS core-site config with our own
        run: docker exec docker_hdfs_1 cp /hadoop/conf/core-site.xml /opt/hadoop/etc/hadoop/core-site.xml
      - name: Replace HDFS hdfs-site config with our own
        run: docker exec docker_hdfs_1 cp /hadoop/conf/hdfs-site.xml /opt/hadoop/etc/hadoop/hdfs-site.xml
      - name: Copy partitioned parquet data to HDFS container
        run: docker cp ./functional-tests/src/main/resources/3.1.1 docker_hdfs_1:/partitioned
      - name: Copy partitioned parquet data to hadoop from local
        uses: nick-invision/retry@v2
        with:
          timeout_seconds: 20
          max_attempts: 10
          retry_on: error
          command: docker exec docker_hdfs_1 hadoop fs -copyFromLocal /partitioned /3.1.1
      - name: Increase active sessions in database
        uses: nick-invision/retry@v2
        with:
          timeout_seconds: 20
          max_attempts: 10
          retry_on: error
          command: docker exec docker_vertica_1 vsql -c "ALTER DATABASE docker SET MaxClientSessions=100;"
      - name: Set env vars
        run: docker exec docker_client_1 /bin/bash -c ""
      - name: Run the integration tests against GCS
        run: docker exec -w /spark-connector/functional-tests docker_client_1 sbt run -DsparkVersion="3.2.1" -DhadoopVersion="3.3.1"
      - name: Remove docker containers
        run: cd docker && docker-compose down
